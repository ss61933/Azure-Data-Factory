{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ExploreandlearnADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/2 LoadFilesInLoop')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetListOfFiles",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ip_adls_devempfolder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetListOfFiles",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetListOfFiles').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy EachFile",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFolderPath": "devemp",
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ip_ADLS_Employeefile",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "op_adl_devempfolder",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/3 Load tablesInLoopUsingVariables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Mention table list in variable .\nRead \nSalesLT].[Product];\n[SalesLT].[ProductCategory];",
				"activities": [
					{
						"name": "ForEachTableName",
						"description": "Read list of tables from variable - V_table_list",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('V_table_list')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data for each table",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@item()",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ip_exploredb_generic",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "op_adl_generic",
											"type": "DatasetReference",
											"parameters": {
												"p_filename": {
													"value": "@replace(item(),'select * from SalesLT.',' ')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"V_table_list": {
						"type": "Array",
						"defaultValue": [
							"select * from SalesLT.PRODUCT",
							"select * from SalesLT.PRODUCTCATEGORY"
						]
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/4 Load tablesInLoopUsingVariables_appenddate')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Mention table list in variable .\nRead \nSalesLT].[Product];\n[SalesLT].[ProductCategory];",
				"activities": [
					{
						"name": "ForEachTableName",
						"description": "Read list of tables from variable - V_table_list",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@variables('V_table_list')",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data for each table",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@item()",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ip_exploredb_generic",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "op_adl_generic",
											"type": "DatasetReference",
											"parameters": {
												"p_filename": {
													"value": "@concat(\n        concat(\n            replace(item(),'select * from SalesLT.',' '),\n            '_'\n            )\n        , formatDateTime(utcNow(),'mm-dd-yyyy')\n)",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"V_table_list": {
						"type": "Array",
						"defaultValue": [
							"select * from SalesLT.PRODUCT",
							"select * from SalesLT.PRODUCTCATEGORY"
						]
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Step3 - Copy or Upsert')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Files list",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ip_adls_devempfolder_all",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Files list",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Files list').output.childItems",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Country else location",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Set Filename",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().name ,'countries.csv' )",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Upsert locations",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "upsert",
														"upsertSettings": {
															"useTempDB": false,
															"keys": [
																"LOCATION_ID"
															],
															"interimSchemaName": "dbo"
														},
														"sqlWriterUseTableLock": false,
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "LOCATION_ID",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "LOCATION_ID",
																	"type": "Int32",
																	"physicalType": "int"
																}
															},
															{
																"source": {
																	"name": "STREET_ADDRESS",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "STREET_ADDRESS",
																	"type": "String",
																	"physicalType": "varchar"
																}
															},
															{
																"source": {
																	"name": "POSTAL_CODE",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "POSTAL_CODE",
																	"type": "String",
																	"physicalType": "varchar"
																}
															},
															{
																"source": {
																	"name": "CITY",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "CITY",
																	"type": "String",
																	"physicalType": "varchar"
																}
															},
															{
																"source": {
																	"name": "STATE_PROVINCE",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "STATE_PROVINCE",
																	"type": "String",
																	"physicalType": "varchar"
																}
															},
															{
																"source": {
																	"name": "COUNTRY_ID",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "COUNTRY_ID",
																	"type": "String",
																	"physicalType": "varchar"
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ip_adls_devempfolder",
														"type": "DatasetReference",
														"parameters": {
															"P_FileName": {
																"value": "@variables('V_VariableName')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "op_exploredb_locations",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "Copy countries",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ip_adls_devempfolder",
														"type": "DatasetReference",
														"parameters": {
															"P_FileName": {
																"value": "@variables('V_VariableName')",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "op_adl_devempfolder",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								},
								{
									"name": "Set Filename",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "V_VariableName",
										"value": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"V_VariableName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Project - Copy Upsert Delete file"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/1 Join Country Locations')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ip_dataflow_countries",
								"type": "DatasetReference"
							},
							"name": "Countries"
						},
						{
							"dataset": {
								"referenceName": "ip_dataflow_locations",
								"type": "DatasetReference"
							},
							"name": "Locations"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "op_dataflow_locationCountryDetails",
								"type": "DatasetReference"
							},
							"name": "TargetLocationdetails"
						}
					],
					"transformations": [
						{
							"name": "countrylocationjoin"
						}
					],
					"scriptLines": [
						"source(output(",
						"          COUNTRY_ID as string,",
						"          COUNTRY_NAME as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Countries",
						"source(output(",
						"          LOCATION_ID as string,",
						"          STREET_ADDRESS as string,",
						"          POSTAL_CODE as string,",
						"          CITY as string,",
						"          STATE_PROVINCE as string,",
						"          COUNTRY_ID as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Locations",
						"Countries, Locations join(Countries@COUNTRY_ID == Locations@COUNTRY_ID,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> countrylocationjoin",
						"countrylocationjoin sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['LocationCountryDetails'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          COUNTRY_ID = Countries@COUNTRY_ID,",
						"          COUNTRY_NAME,",
						"          LOCATION_ID,",
						"          CITY,",
						"          STATE_PROVINCE",
						"     ),",
						"     partitionBy('hash', 1)) ~> TargetLocationdetails"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Step2 - Call Copy for all files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetListOfFiles",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ip_adls_devempfolder_all",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "GetListOfFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('GetListOfFiles').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Decide Copy",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Step3 - Copy or Upsert",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"FileName": {
						"type": "String"
					},
					"V_VariableName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Project - Copy Upsert Delete file"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Step3 - Copy or Upsert')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/8 Dataflow locationcountry')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "1 Join Country Locations",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "1 Join Country Locations",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Countries": {},
									"Locations": {},
									"TargetLocationdetails": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/1 Join Country Locations')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Step1 - Switch - Delete acton')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SwitchCopyDelete",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.P_case",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "Copy",
									"activities": [
										{
											"name": "ExecutePipelineCopy",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "Step2 - Call Copy for all files",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {}
											}
										}
									]
								},
								{
									"value": "Delete",
									"activities": [
										{
											"name": "Delete Files",
											"description": "Delete all files from folder /deletefolder/",
											"type": "Delete",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"dataset": {
													"referenceName": "ip_adls_deletefolder",
													"type": "DatasetReference",
													"parameters": {}
												},
												"logStorageSettings": {
													"linkedServiceName": {
														"referenceName": "link_to_ADLS",
														"type": "LinkedServiceReference"
													},
													"path": "logfolder"
												},
												"enableLogging": true,
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": false,
													"enablePartitionDiscovery": false
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"P_case": {
						"type": "string",
						"defaultValue": "Delete"
					}
				},
				"variables": {
					"V_VariableName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Project - Copy Upsert Delete file"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Step2 - Call Copy for all files')]"
			]
		}
	]
}